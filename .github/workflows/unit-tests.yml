name: Unit Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # - cron: '0 13,23 * * *'
    - cron: '9 9 * * *'

jobs:
  unit-tests:
    name: üß™ Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install yarn
        uses: borales/actions-yarn@v4
        with:
          cmd: install
      - name: Yarn test up to 3 times
        shell: bash
        run: # Try yarn test 3 times before failing
          r=3;while ! yarn test ; do ((--r))||exit;sleep 1;done
      - name: Debug github eventname
        run: echo "${{ github.event_name }}"

  fail-report:
    if: ${{ failure() && github.event_name == 'schedule' }}
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: Get repository name
        run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
      - name: Pseudo send Telegram message
        run:
          echo "‚ùå ${{ env.REPOSITORY_NAME }}"
          echo "[${{ github.workflow }} failed](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for commit [${{ github.event.commits[0].message }}](https://github.com/${{ github.repository }}/commit/${{github.sha}}) (${{github.actor}})"
      # - name: Send Telegram message with fail report
      #   uses: appleboy/telegram-action@master
      #   with:
      #     to: ${{ secrets.CI_TELEGRAM_TO }}
      #     token: ${{ secrets.CI_TELEGRAM_TOKEN }}
      #     format: markdown
      #     message: |
      #       ‚ùå **${{ github.repository }}** - Workflow: ${{ github.workflow }}
      #       [Actions](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for commit "[${{ github.event.commits[0].message }}](https://github.com/${{ github.repository }}/commit/${{github.sha}})" (${{github.actor}})
